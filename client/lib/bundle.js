!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var o=function(e,t,n,o){return new(n||(n=Promise))((function(r,c){function a(e){try{i(o.next(e))}catch(e){c(e)}}function u(e){try{i(o.throw(e))}catch(e){c(e)}}function i(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}i((o=o.apply(e,t||[])).next())}))};function r(e){e.hidden=!0}function c(e){let t="";for(let n=0;n<e.length;n++){const o=e.charAt(n);o===o.toUpperCase()&&(t+=" "),t+=o}return t=t.charAt(0).toUpperCase()+t.substring(1),t}const a=["January","February","March","April","May","June","July","August","September","October","November","December"];function u(e,t){if(null==e[t])return"";let n=e[t];return"weight"===t||"bodyMass"===t?n+=" kg":"time"===t?n+=" sec":"preBreak"===t&&(n=(+n/60).toFixed(1)+" min"),n}const i=document.querySelector(".main-container"),s=document.querySelector(".loading"),l=document.querySelector(".error"),d=new class{constructor(e,t){this.onSuccess=e,this.onFailure=t,this._workoutsData=null,this.getData()}get workoutsData(){return null==this._workoutsData?null:Object.assign(this._workoutsData)}getData(){return o(this,void 0,void 0,(function*(){try{const e=yield fetch("http://localhost:5000/workouts");this._workoutsData=yield e.json(),this.onSuccess()}catch(e){console.log(e),this.onFailure(e)}}))}}((function(){r(s),i.innerHTML="",d.workoutsData.workouts.forEach(e=>{const t=document.createElement("div");t.className="workouts-tables";const n=document.createElement("h2");n.className="workout-date",n.textContent=function(e){const t=new Date(e);return`${a[t.getMonth()]} ${t.getDate()}th, ${t.getFullYear()}`}(e.date),t.appendChild(n),Object.keys(e.exercises).forEach(n=>{const o=e.exercises[n];let r=[];o.forEach(e=>{const t=Object.keys(e);r=function(e,t){const n=Array.from(e);return t.forEach(e=>{-1==n.indexOf(e)&&n.push(e)}),n}(r,t)});const a=document.createElement("div");a.className="exercise";const i=document.createElement("h3");i.className="exercise-name",i.textContent=c(n),a.appendChild(i);const s=document.createElement("table"),l=document.createElement("thead"),d=document.createElement("tr"),h=document.createElement("th");h.textContent="Set",d.appendChild(h),r.forEach(e=>{const t=document.createElement("th");t.textContent=c(e),d.appendChild(t)}),l.appendChild(d),s.appendChild(l);const f=document.createElement("tbody");for(let e=0;e<o.length;e++){const t=o[e],n=document.createElement("tr"),c=document.createElement("td");c.textContent=""+(e+1),n.appendChild(c),r.forEach(e=>{const o=document.createElement("td");o.textContent=u(t,e),n.appendChild(o)}),f.appendChild(n)}s.appendChild(f),a.appendChild(s),t.appendChild(a)}),i.appendChild(t)})}),(function(e){r(s),l.querySelector(".error-message").textContent=e.message,t=l,t.hidden=!1;var t}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,